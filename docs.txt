train_cfg.batch_size = 131072
train_cfg.minibatch_size = 32768
train_cfg.bptt = 8

minibatch_rows = 4096 # must be minibatch_size / bptt exactly
num_minibatches = 4 # must be batch_size / minibatch_size exactly

###
### observation
###

- `_num_self_obs`: height + num_bodies * (pos + vel + rot + ang_vel) - root_pos

# _compute_humanoid_obs: compute_humanoid_observations_smpl_max
body_pos: (num_envs, num_bodies, 3), body_rot: (num_envs, num_bodies, 4), body_vel: (num_envs, num_bodies, 3), body_ang_vel: (num_envs, num_bodies, 3), smpl_params: (num_envs, 11), limb_weights: (num_envs, 10)

body_pos: (num_envs, num_bodies, 3)
body_rot: (num_envs, num_bodies, 4)
body_vel: (num_envs, num_bodies, 3)
body_ang_vel: (num_envs, num_bodies, 3)
smpl_params: (num_envs, 11)
limb_weights: (num_envs, 10)



###
### EVALUATE
###

# at vecenv.recv()
obses = (4069, 934) num_envs, num_obs
rewards, dones, truncs, env_id, mask = (4096,) # env_id may not change

\[logprob, entropy, value\].shape = 4096
actions.shape = (4096, 69)

experience.actions.shape = (131072, 96)
experience.logprobs.shape = (131072,)

experience.b_actions.shape = (4, 4096, 8, 96)

TODO:
- find out differences between advantage shapes w and w/o puffer-advantage
- why does `HumanoidPHC._define_gym_spaces` have velocity dimension as 6? shouldnt it be 3? are they including acceleration?

# where are they getting tensors from the gym env?
- gym_tensors = `actor_root_state`, `dof_state_tensor`, `rigid_body_state_tensor`, `net_contact_force_tensor`, `dof_force_tensor` (theres also `force_sensor_tensor` but its not used)
- we acquire a pointer to these tensors with: gym.acquire_{}(sim)
- we refresh them after initialization, stepping or resetting with: gym.refresh_{}(sim)

